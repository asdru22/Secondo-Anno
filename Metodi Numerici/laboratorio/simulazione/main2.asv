close all
clear all
set(gca,'color',[0.8,0.8,1])
open_figure(1);

[p,dp] = draw_circle([0,0],1,30);
C=curv2_ppbezierCC1_interp_der(p,dp,linspace(0,2*pi,30));
curv2_ppbezier_plot(C,100,'b-');

c = C;
c.cp = C.cp*0.8;
curv2_ppbezier_plot(c,100,'b-');

lu.ab = [0,1];
lu.cp = [-1 0.14; 1 0.14];
lu.deg = 1;
curv2_bezier_plot(lu,100,'r-');

ld.ab = [0,1];
ld.cp = [-1 -0.14; 1 -0.14];
ld.deg = 1;
curv2_bezier_plot(ld,100,'r-');

[ilu,plu,pld] = curv2_intersect();


%%%%%%%%%%%%%
function ppP=curv2_ppbezierCC1_interp_der(Q,Q1,t)
% Q: punti
% Q1: punti funzione derivata
% t: intervallo in cui valutare
cqx=Q(:,1);
cqy=Q(:,2);
dx=Q1(:,1);
dy=Q1(:,2);
m=length(cqx);
nc=m-1;
%bma=b-a;
bma=t(m)-t(1);

ht(1:m-1)=t(2:m)-t(1:m-1);
for i=1:nc
 trei=3*(i-1)+1;
 cpx(trei)=cqx(i);
 cpx(trei+1)=cqx(i)+dx(i).*ht(i)./3;
 cpx(trei+2)=cqx(i+1)-dx(i+1).*ht(i)./3;
 cpy(trei)=cqy(i);
 cpy(trei+1)=cqy(i)+dy(i).*ht(i)./3;
 cpy(trei+2)=cqy(i+1)-dy(i+1).*ht(i)./3;
end
cpx(trei+3)=cqx(m);
cpy(trei+3)=cqy(m);

ppP.deg=3;
ppP.cp=zeros(3*nc+1,2);
ppP.cp(:,1)=cpx;
ppP.cp(:,2)=cpy;
ppP.ab=zeros(1,m);
ppP.ab=t;

end

function [p,dp]= draw_circle(center, radius,np)
    theta = linspace(0, 2*pi, np);
    x = center(1) + radius * cos(theta);
    y = center(2) + radius * sin(theta);
    p = [x;y]';

    dx = -radius * sin(theta);
    dy = radius * cos(theta);
    dp = [dx;dy]';
end
